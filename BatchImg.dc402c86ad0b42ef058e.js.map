{"version":3,"sources":["utils/image/index.js","pages/default/BatchImg/index.js","resources/component/atoms/Title/index.js","resources/component/molecules/IconCard/index.js"],"names":["getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","settings","slidesToShow","autoplay","arrows","BatchImg","useState","fileList","setFileList","customizeSize","setCustomizeSize","customizeName","setCustomizeName","runSwitch","setRunSwitch","imageSize","setImageSize","originalSize","setOriginalSize","zipName","setZipName","alert","setAlert","done","setDone","alertText","setAlertText","firstImageSize","setFirstImageSize","imgAmount","setImgAmount","multiple","setMultiple","setH1Title","useContext","MyContext","cardDom","useRef","uploadButton","PlusOutlined","style","marginTop","a","fileObject","base64Img","image","Image","width","height","qrCodeSize","resizeBase64Img","copyResizeBase64Img","i","length","canvas","document","createElement","ctx","getContext","resizeImg","Math","ceil","src","drawImage","dataURL","toDataURL","name","copyName","isJpgOrPng","type","message","before","Upload","LIST_IGNORE","handleChangeCustomize","e","block","value","target","map","row","handleChangeName","newFileList","filter","key","useEffect","current","children","BatchImgRoot","AlertRoot","banner","SpinRoot","size","AlertSuccess","BatchImgHeader","gutter","span","TitleRoot","borderBottom","UploadRoot","listType","showUploadList","beforeUpload","onChange","info","status","setTimeout","customRequest","onSuccess","RenderRow","index","RenderCard","alt","InputRoot","CustomizeRoot","Group","placeholder","resize","TextArea","rows","newMultiple","split","Number","forEach","push","display","flexDirection","onClick","href","folderName","zip","JSZip","img","folder","j","replace","base64","generateAsync","then","content","saveAs","BatchImgBody","ref","Fragment","align","marginBottom","onKeyPress","CardCarousel","row2","index2","IconCard","id","padding","styled","main","section","Title","div","Alert","Row","Carousel","props","className","css","webId","version","changeName","onChangeName","reName","IconCardRoot"],"mappings":"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","file":"BatchImg.dc402c86ad0b42ef058e.js","sourcesContent":["/**\r\n * getBase64\r\n * @param file\r\n * @returns {string}\r\n */\r\nexport function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react';\r\n\r\nimport { MyContext } from '@reducers';\r\n\r\nimport { getBase64 } from '@utils/image';\r\n\r\nimport { Form, Row, Col, Upload, message, Input, Button, Radio, Divider, Alert, Spin, Carousel, Icon } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport JSZip from 'jszip';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport Title from '@component/atoms/Title';\r\nimport IconCard from '@component/molecules/IconCard';\r\n\r\nconst settings = {\r\n    slidesToShow: 4,\r\n    autoplay: true,\r\n    arrows: true,\r\n};\r\n\r\nfunction BatchImg() {\r\n    const [fileList, setFileList] = useState([]);\r\n    const [customizeSize, setCustomizeSize] = useState(2);\r\n    const [customizeName, setCustomizeName] = useState(2);\r\n    const [runSwitch, setRunSwitch] = useState(false);\r\n    const [imageSize, setImageSize] = useState('');\r\n    const [originalSize, setOriginalSize] = useState('');\r\n    const [zipName, setZipName] = useState('');\r\n    const [alert, setAlert] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const [alertText, setAlertText] = useState('');\r\n    const [firstImageSize, setFirstImageSize] = useState([]);\r\n    const [imgAmount, setImgAmount] = useState(0);\r\n\r\n    const [multiple, setMultiple] = useState([2, 3, 3, 4]);\r\n\r\n    const { setH1Title } = useContext(MyContext);\r\n\r\n    const cardDom = useRef();\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>上傳圖片</div>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setImgAmount(0);\r\n            setFileList([]);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setH1Title('遊戲圖片批次產圖工具');\r\n\r\n        if (cardDom.current.children.length !== 0) {\r\n            setAlertText('');\r\n            setAlert(false);\r\n        }\r\n\r\n        if (fileList.length) {\r\n            setFirstImageSize(fileList[0].qrCodeSize);\r\n        }\r\n    }, [setH1Title, fileList, firstImageSize, multiple, runSwitch]);\r\n\r\n    async function beforeUpload(file) {\r\n        setRunSwitch(false);\r\n        setAlert(true);\r\n        setAlertText('上傳中');\r\n        const fileObject = {};\r\n        const base64Img = await getBase64(file);\r\n        const image = new Image();\r\n        let width = 0;\r\n        let height = 0;\r\n        image.onload = () => {\r\n            fileObject.qrCodeSize = [image.width, image.height];\r\n            fileObject.resizeBase64Img = [];\r\n            fileObject.copyResizeBase64Img = [];\r\n            for (let i = 0; i < multiple.length; i++) {\r\n                const canvas = document.createElement('canvas');\r\n                const ctx = canvas.getContext('2d');\r\n                const resizeImg = new Image();\r\n\r\n                if (customizeSize === 1) {\r\n                    width = Math.ceil(fileObject.qrCodeSize[0] * multiple[i]);\r\n                    height = Math.ceil(fileObject.qrCodeSize[1] * multiple[i]);\r\n                } else {\r\n                    width = Math.ceil((fileObject.qrCodeSize[0] / 4) * multiple[i]);\r\n                    height = Math.ceil((fileObject.qrCodeSize[1] / 4) * multiple[i]);\r\n                }\r\n\r\n                resizeImg.src = base64Img;\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                ctx.drawImage(resizeImg, 0, 0, width, height);\r\n                const dataURL = canvas.toDataURL('image/png');\r\n                fileObject.resizeBase64Img[i] = dataURL;\r\n                fileObject.copyResizeBase64Img[i] = dataURL;\r\n            }\r\n        };\r\n        image.src = base64Img;\r\n        fileObject.base64Img = base64Img;\r\n        fileObject.name = file.name;\r\n        fileObject.copyName = file.name;\r\n\r\n        const isJpgOrPng = file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('請上傳PNG檔!');\r\n        }\r\n        setFileList((before) => [...before, fileObject]);\r\n\r\n        return isJpgOrPng ? true : Upload.LIST_IGNORE;\r\n    }\r\n\r\n    function onChange(info) {\r\n        if (info.file.status === 'done') {\r\n            setImgAmount(imgAmount + 1);\r\n        }\r\n        if (imgAmount + 1 === info.fileList.length) {\r\n            setAlert(false);\r\n            setAlertText('圖片上傳完成');\r\n            setDone(true);\r\n            setTimeout(() => {\r\n                setDone(false);\r\n                setAlertText('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    function dummyRequest(info) {\r\n        setTimeout(() => {\r\n            info.onSuccess('ok');\r\n        }, 0);\r\n    }\r\n\r\n    function handleChangeCustomize(e, block) {\r\n        const value = e.target.value;\r\n        if (block === 'name') setCustomizeName(value);\r\n        if (block === 'size') setCustomizeSize(value);\r\n        if (value === 2 && block === 'name') {\r\n            fileList.map((row) => {\r\n                return (row.name = row.copyName);\r\n            });\r\n        }\r\n        if (value === 2 && block === 'size') {\r\n            setMultiple([2, 3, 3, 4]);\r\n            setImageSize('');\r\n            setOriginalSize('');\r\n            setFileList([]);\r\n        }\r\n        if (value === 1 && block === 'size') {\r\n            setFileList([]);\r\n            setImgAmount(0);\r\n        }\r\n    }\r\n\r\n    function handleChangeName(e, src) {\r\n        const newFileList = fileList.filter((row) => {\r\n            if (row.base64Img === src) {\r\n                row.name = `${e.target.value}.png`;\r\n            }\r\n            return row;\r\n        });\r\n        if (e.key === 'Enter') setFileList(newFileList);\r\n    }\r\n\r\n    function handleRenderImage() {\r\n        if (fileList.length === 0) return;\r\n        if (cardDom.current.children.length !== 0) return;\r\n\r\n        setDone(false);\r\n        setAlertText('圖片縮放執行中');\r\n        setAlert(true);\r\n        setTimeout(() => {\r\n            setRunSwitch(true);\r\n        }, 200);\r\n\r\n        if (fileList.length === 0 && customizeSize === 1 && imageSize === '') {\r\n            setAlertText('請先上傳圖標在設定尺寸');\r\n            setAlert(true);\r\n\r\n            setTimeout(() => {\r\n                setAlert(false);\r\n                setAlertText('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    function handleImageSize(e) {\r\n        setImageSize(e.target.value);\r\n        let newMultipleArray = [];\r\n        let newMultiple = [];\r\n        newMultipleArray = e.target.value.split(',').map(Number);\r\n        newMultipleArray.forEach((row) => {\r\n            newMultiple.push(row / originalSize);\r\n        });\r\n        setMultiple(newMultiple);\r\n    }\r\n\r\n    function handleOriginalSize(e) {\r\n        const value = e.target.value;\r\n        setOriginalSize(value);\r\n    }\r\n\r\n    function handleMultiple(e) {\r\n        if (e.key === 'Enter') {\r\n            // const oldMultiple = fileList[0].qrCodeSize;\r\n            let newMultipleArray = [];\r\n            let newMultiple = [];\r\n            newMultipleArray = imageSize.split(',').map(Number);\r\n            // let smallSize = oldMultiple[0] / 4;\r\n            newMultipleArray.forEach((row) => {\r\n                newMultiple.push(row / originalSize);\r\n            });\r\n            setMultiple(newMultiple);\r\n\r\n            // const newFileList = fileList.map((row) => {\r\n            //     row.resizeBase64Img = [];\r\n\r\n            //     for (let i = 0; i < newMultiple.length; i++) {\r\n            //         const canvas = document.createElement('canvas');\r\n            //         const ctx = canvas.getContext('2d');\r\n            //         const resizeImg = new Image();\r\n\r\n            //         const width = Math.ceil(smallSize * newMultiple[i]);\r\n            //         const height = Math.ceil(smallSize * newMultiple[i]);\r\n\r\n            //         resizeImg.src = row.base64Img;\r\n            //         canvas.width = width;\r\n            //         canvas.height = height;\r\n\r\n            //         ctx.drawImage(resizeImg, 0, 0, width, height);\r\n            //         const dataURL = canvas.toDataURL('image/png');\r\n            //         row.resizeBase64Img[i] = dataURL;\r\n            //         row.copyResizeBase64Img[i] = dataURL;\r\n            //     }\r\n            //     return row;\r\n            // });\r\n            // setFileList(newFileList);\r\n        }\r\n    }\r\n\r\n    function handleChangeZipName(e) {\r\n        setZipName(e.target.value);\r\n    }\r\n\r\n    function handleReset() {\r\n        setFileList([]);\r\n        setRunSwitch(false);\r\n        setZipName('');\r\n        setCustomizeSize(2);\r\n        setCustomizeName(2);\r\n        setMultiple([2, 3, 3, 4]);\r\n        setImageSize('');\r\n        setOriginalSize('');\r\n    }\r\n\r\n    function handleAlertClose() {\r\n        setAlert(false);\r\n    }\r\n\r\n    function handleSave() {\r\n        const folderName = zipName || '圖標';\r\n        const zip = new JSZip();\r\n        let src = '';\r\n        let name = '';\r\n        const img = zip.folder(folderName);\r\n        for (let i = 0; i < multiple.length; i++) {\r\n            for (let j = 0; j < fileList.length; j++) {\r\n                src = fileList[j].resizeBase64Img[i].replace('data:image/png;base64,', '');\r\n                name = fileList[j].name;\r\n                if (customizeSize === 1) {\r\n                    img.folder(\r\n                        `${fileList[j].qrCodeSize[0] * multiple[i]} x ${fileList[j].qrCodeSize[1] * multiple[i]}`\r\n                    ).file(name, src, { base64: true });\r\n                } else {\r\n                    switch (i) {\r\n                        case 0:\r\n                            const two = img.folder('2x');\r\n                            two.file(name, src, { base64: true });\r\n                            break;\r\n                        case 1:\r\n                            const three = img.folder('3x');\r\n                            three.file(name, src, { base64: true });\r\n                            break;\r\n                        case 2:\r\n                            const xxhdpi = img.folder('xxhdpi');\r\n                            xxhdpi.file(name, src, { base64: true });\r\n                            break;\r\n                        case 3:\r\n                            const xxxhdpi = img.folder('xxxhdpi');\r\n                            xxxhdpi.file(name, src, { base64: true });\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // for (let i = 0; i < fileList.length; i++) {\r\n        //     let folderName = fileList[i].name.replace('.png', '');\r\n        //     name = fileList[i].name;\r\n        //     var img = zip.folder(folderName);\r\n\r\n        //     for (let j = 0; j < fileList[i].resizeBase64Img.length; j++) {\r\n        //         src = fileList[i].resizeBase64Img[j].replace('data:image/png;base64,', '');\r\n        //         // console.log('src', src);\r\n        //         if (j === 0) {\r\n        //             var two = img.folder('2x');\r\n        //             two.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 1) {\r\n        //             var three = img.folder('3x');\r\n        //             three.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 2) {\r\n        //             var xxhdpi = img.folder('xxhdpi');\r\n        //             xxhdpi.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 3) {\r\n        //             var xxxhdpi = img.folder('xxxhdpi');\r\n        //             xxxhdpi.file(name, src, { base64: true });\r\n        //         }\r\n        //     }\r\n        // }\r\n        zip.generateAsync({ type: 'blob' }).then(function (content) {\r\n            saveAs(content, folderName);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <BatchImgRoot>\r\n            {alert && <AlertRoot type=\"error\" message={alertText} banner />}\r\n            {alert && (\r\n                <SpinRoot>\r\n                    <Spin size=\"large\" />\r\n                </SpinRoot>\r\n            )}\r\n            {done && <AlertSuccess type=\"success\" message={alertText} banner />}\r\n            <BatchImgHeader>\r\n                <Form>\r\n                    <Row gutter={32}>\r\n                        <Col span={10}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                上傳圖片\r\n                            </TitleRoot>\r\n                            {(customizeSize === 2 || (imageSize !== '' && originalSize !== '')) && (\r\n                                <UploadRoot\r\n                                    listType=\"picture-card\"\r\n                                    showUploadList={false}\r\n                                    multiple={true}\r\n                                    beforeUpload={beforeUpload}\r\n                                    onChange={onChange}\r\n                                    customRequest={dummyRequest}\r\n                                >\r\n                                    {uploadButton}\r\n                                </UploadRoot>\r\n                            )}\r\n\r\n                            <RenderRow gutter={8}>\r\n                                {fileList &&\r\n                                    fileList.map((row, index) => (\r\n                                        <RenderCard key={index}>\r\n                                            <img src={row.base64Img} alt={row.name} />\r\n                                        </RenderCard>\r\n                                    ))}\r\n                            </RenderRow>\r\n                        </Col>\r\n                        <Col span={10}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                圖片資訊\r\n                            </TitleRoot>\r\n                            <InputRoot>\r\n                                <p>自定義名稱</p>\r\n                                <CustomizeRoot>\r\n                                    <Radio.Group\r\n                                        value={customizeName}\r\n                                        onChange={(e) => handleChangeCustomize(e, 'name')}\r\n                                    >\r\n                                        <Radio value={1}>是</Radio>\r\n                                        <Radio value={2}>否</Radio>\r\n                                    </Radio.Group>\r\n                                    {/* {customizeName === 1 && (\r\n                                        <Input.TextArea\r\n                                            rows={4}\r\n                                            placeholder=\"多張圖片，請以 , 做區隔\"\r\n                                            style={{ resize: 'none', marginTop: '10px' }}\r\n                                        />\r\n                                    )} */}\r\n                                </CustomizeRoot>\r\n                            </InputRoot>\r\n                            <InputRoot>\r\n                                <p>自定義尺寸</p>\r\n                                <CustomizeRoot>\r\n                                    <Radio.Group\r\n                                        value={customizeSize}\r\n                                        onChange={(e) => handleChangeCustomize(e, 'size')}\r\n                                    >\r\n                                        <Radio value={1}>是</Radio>\r\n                                        <Radio value={2}>否</Radio>\r\n                                    </Radio.Group>\r\n                                    {customizeSize === 1 && (\r\n                                        <Input\r\n                                            placeholder=\"請輸入原始圖片寬度尺寸\"\r\n                                            style={{ resize: 'none', marginTop: '10px', width: '100%' }}\r\n                                            value={originalSize}\r\n                                            onChange={handleOriginalSize}\r\n                                        />\r\n                                    )}\r\n                                    {customizeSize === 1 && originalSize !== '' && (\r\n                                        <Input.TextArea\r\n                                            rows={3}\r\n                                            placeholder=\"多尺寸，輸入寬度即可，程式會自動計算高度，請以 , 做區隔，範例: 64,128,256,512\"\r\n                                            style={{ resize: 'none', marginTop: '10px' }}\r\n                                            value={imageSize}\r\n                                            onChange={handleImageSize}\r\n                                            // onKeyPress={handleMultiple}\r\n                                        />\r\n                                    )}\r\n                                </CustomizeRoot>\r\n                            </InputRoot>\r\n                            <InputRoot>\r\n                                <p>壓縮檔名稱</p>\r\n                                <Input\r\n                                    placeholder=\"請輸入壓縮檔名稱\"\r\n                                    size=\"small\"\r\n                                    value={zipName}\r\n                                    onChange={handleChangeZipName}\r\n                                />\r\n                            </InputRoot>\r\n                        </Col>\r\n                        <Col span={4} style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                功能\r\n                            </TitleRoot>\r\n                            <Button type=\"primary\" size=\"large\" block onClick={handleRenderImage}>\r\n                                執行圖片縮放\r\n                            </Button>\r\n                            <Button\r\n                                type=\"danger\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: '10px' }}\r\n                                onClick={handleReset}\r\n                            >\r\n                                重置\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: 'auto' }}\r\n                                href=\"https://tinypng.com/\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                TinyPng網站\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: '10px' }}\r\n                                onClick={handleSave}\r\n                            >\r\n                                打包下載\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </BatchImgHeader>\r\n            <BatchImgBody>\r\n                <Row gutter={[16, 16]} ref={cardDom}>\r\n                    {runSwitch &&\r\n                        multiple.length >= 4 &&\r\n                        fileList.map((row, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <Col span={24}>\r\n                                        <Divider>{row.copyName}</Divider>\r\n                                    </Col>\r\n                                    {customizeName === 1 && (\r\n                                        <Col span={12}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={4}>\r\n                                                    <p style={{ marginBottom: 0 }}>自定義名稱</p>\r\n                                                </Col>\r\n                                                <Col span={20}>\r\n                                                    <Input\r\n                                                        placeholder=\"輸入完成請按下'Enter'鍵\"\r\n                                                        onKeyPress={(e) => handleChangeName(e, row.base64Img)}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    )}\r\n                                    <Col span={24}>\r\n                                        <Row gutter={[16, 16]}>\r\n                                            <Col span={24}>\r\n                                                <CardCarousel {...settings}>\r\n                                                    {row.resizeBase64Img &&\r\n                                                        row.resizeBase64Img.map((row2, index2) => {\r\n                                                            return (\r\n                                                                <Col span={24} key={index2}>\r\n                                                                    <IconCard\r\n                                                                        id={index}\r\n                                                                        src={row2}\r\n                                                                        size={\r\n                                                                            customizeSize === 1\r\n                                                                                ? [\r\n                                                                                      Math.ceil(\r\n                                                                                          row.qrCodeSize[0] *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                      Math.ceil(\r\n                                                                                          row.qrCodeSize[1] *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                  ]\r\n                                                                                : [\r\n                                                                                      Math.ceil(\r\n                                                                                          (row.qrCodeSize[0] / 4) *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                      Math.ceil(\r\n                                                                                          (row.qrCodeSize[1] / 4) *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                  ]\r\n                                                                        }\r\n                                                                        BatchImg\r\n                                                                        name={row.name}\r\n                                                                        multiple={multiple[index2]}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            );\r\n                                                        })}\r\n                                                </CardCarousel>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </React.Fragment>\r\n                            );\r\n                        })}\r\n                    {runSwitch &&\r\n                        multiple.length < 4 &&\r\n                        fileList.map((row, index) => {\r\n                            return row.resizeBase64Img.map((row2, index2) => {\r\n                                return (\r\n                                    <React.Fragment key={row.name + index2}>\r\n                                        {index2 === 0 && (\r\n                                            <Col span={24}>\r\n                                                <Divider>{row.copyName}</Divider>\r\n                                            </Col>\r\n                                        )}\r\n                                        {index2 === 0 && customizeName === 1 ? (\r\n                                            <Col span={12}>\r\n                                                <Row align=\"middle\">\r\n                                                    <Col span={4}>\r\n                                                        <p style={{ marginBottom: 0 }}>自定義名稱</p>\r\n                                                    </Col>\r\n                                                    <Col span={20}>\r\n                                                        <Input\r\n                                                            placeholder=\"輸入完成請按下'Enter'鍵\"\r\n                                                            onKeyPress={(e) => handleChangeName(e, row.base64Img)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        ) : null}\r\n                                        {index2 === 0 && <Col span={24} style={{ padding: 0 }}></Col>}\r\n                                        <Col span={6}>\r\n                                            <IconCard\r\n                                                id={index}\r\n                                                src={row2}\r\n                                                size={\r\n                                                    customizeSize === 1\r\n                                                        ? [\r\n                                                              Math.ceil(row.qrCodeSize[0] * multiple[index2]),\r\n                                                              Math.ceil(row.qrCodeSize[1] * multiple[index2]),\r\n                                                          ]\r\n                                                        : [\r\n                                                              Math.ceil((row.qrCodeSize[0] / 4) * multiple[index2]),\r\n                                                              Math.ceil((row.qrCodeSize[1] / 4) * multiple[index2]),\r\n                                                          ]\r\n                                                }\r\n                                                BatchImg\r\n                                                name={row.name}\r\n                                                multiple={multiple[index2]}\r\n                                            />\r\n                                        </Col>\r\n                                    </React.Fragment>\r\n                                );\r\n                            });\r\n                        })}\r\n                </Row>\r\n            </BatchImgBody>\r\n        </BatchImgRoot>\r\n    );\r\n}\r\n\r\nexport default BatchImg;\r\n\r\nconst BatchImgRoot = styled.main``;\r\n\r\nconst BatchImgHeader = styled.section`\r\n    padding: 30px 0;\r\n    background-color: #ccc;\r\n    form {\r\n        max-width: 1000px;\r\n        margin: 0 auto;\r\n        & > .ant-row {\r\n            min-height: 294px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TitleRoot = styled(Title)`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst UploadRoot = styled(Upload)`\r\n    .ant-upload-list-item {\r\n        border-color: #d9d9d9;\r\n        background: #fff;\r\n    }\r\n    .ant-tooltip {\r\n        display: none;\r\n    }\r\n    .ant-upload-list {\r\n        max-height: 223px;\r\n        overflow: hidden;\r\n        overflow-y: auto;\r\n        &::-webkit-scrollbar {\r\n            width: 5px;\r\n            height: 5px;\r\n            background-color: #ccc;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n        }\r\n        /*滚动条的滑块按钮*/\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 10px;\r\n            background-color: #001529;\r\n            box-shadow: inset 0 0 5px #000;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InputRoot = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n    p {\r\n        min-width: 80px;\r\n        margin-right: 10px;\r\n        margin-bottom: 0;\r\n    }\r\n    input {\r\n        width: 170px;\r\n    }\r\n`;\r\n\r\nconst CustomizeRoot = styled.div``;\r\n\r\nconst BatchImgBody = styled.section`\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n    padding: 30px 0;\r\n`;\r\n\r\nconst AlertRoot = styled(Alert)`\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 51;\r\n`;\r\n\r\nconst AlertSuccess = styled(Alert)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 51;\r\n    font-size: 22px;\r\n`;\r\n\r\nconst SpinRoot = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 50;\r\n`;\r\n\r\nconst RenderRow = styled(Row)`\r\n    max-height: 224px;\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n        width: 5px;\r\n        background-color: #83adee;\r\n        border-radius: 5px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        width: 5px;\r\n        border-radius: 5px;\r\n        background-color: #243d65;\r\n    }\r\n`;\r\n\r\nconst RenderCard = styled.div`\r\n    width: 104px;\r\n    height: 104px;\r\n    background-color: #fafafa;\r\n    border: 1px dashed #d9d9d9;\r\n    margin: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    img {\r\n        max-width: 100%;\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nconst CardCarousel = styled(Carousel)`\r\n    margin: 0 -8px;\r\n    .slick-arrow {\r\n        background: #ccc;\r\n        &:before {\r\n            color: #fff;\r\n            font-size: 12px;\r\n        }\r\n        &:hover,\r\n        &:active {\r\n            background: #666;\r\n        }\r\n    }\r\n`;\r\n","import styled, { css } from 'styled-components';\r\n\r\nfunction Title(props) {\r\n    const { children, size, borderBottom, className } = props;\r\n\r\n    return (\r\n        <TitleRoot className={className} size={size} borderBottom={borderBottom}>\r\n            {children}\r\n        </TitleRoot>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n\r\nconst TitleRoot = styled.div`\r\n    font-size: ${(props) => props.size}px;\r\n    ${(props) =>\r\n        props.borderBottom &&\r\n        css`\r\n            padding-bottom: 10px;\r\n            border-bottom: 1px solid #fff;\r\n        `}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Input } from 'antd';\r\n\r\nfunction IconCard(props) {\r\n    const { size, src, id, webId, version, BatchImg, name, multiple, changeName, onChangeName } = props;\r\n    function reName() {\r\n        if (size[0] !== 128) {\r\n            if (version === 1) {\r\n                return `app_icon_${size[0]}x${size[1]}.png`;\r\n            } else if (version === 2) {\r\n                return `app_icon_effects_${size[0]}x${size[0]}.png`;\r\n            }\r\n        } else {\r\n            if (version === 1) {\r\n                return `app_icon_${webId}.png`;\r\n            } else if (version === 2) {\r\n                return `app_icon_effects_${webId}.png`;\r\n            }\r\n        }\r\n        if (size === 150) {\r\n            return `${webId}_qrcode.png`;\r\n        }\r\n        if (BatchImg) {\r\n            return `${name} ${multiple}`;\r\n        }\r\n    }\r\n    return (\r\n        <IconCardRoot>\r\n            <h3>\r\n                {size[0]} x {size[1]}\r\n            </h3>\r\n            <div className=\"img_img\">\r\n                <img src={src} id={'resizeImg' + (id + 1)} alt={name} />\r\n            </div>\r\n            {changeName ? (\r\n                <>\r\n                    <p\r\n                        className={`${!BatchImg ? 'card_name' : 'card_name card_name--batch'}`}\r\n                        id={'iconName' + (id + 1)}\r\n                    >\r\n                        {reName()}\r\n                    </p>{' '}\r\n                    <Input size=\"small\" style={{ marginTop: '11.2px' }} onChange={onChangeName} />\r\n                </>\r\n            ) : (\r\n                <p className={`${!BatchImg ? 'card_name' : 'card_name card_name--batch'}`} id={'iconName' + (id + 1)}>\r\n                    {reName()}\r\n                </p>\r\n            )}\r\n        </IconCardRoot>\r\n    );\r\n}\r\n\r\nexport default IconCard;\r\n\r\nconst IconCardRoot = styled.div`\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .img_img {\r\n        width: 192px;\r\n        height: 192px;\r\n        position: relative;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 20px;\r\n    }\r\n\r\n    img {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n    }\r\n\r\n    p {\r\n        margin-top: 10px;\r\n        margin-bottom: 0;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .card_name {\r\n        max-width: 218px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        position: relative;\r\n        &--batch {\r\n            padding-right: 20px;\r\n            &:after {\r\n                position: absolute;\r\n                content: '倍';\r\n                right: 0;\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}