{"version":3,"sources":["resources/component/atoms/Title/index.js","resources/component/molecules/IconCard/index.js","utils/image/index.js","pages/default/BatchImg/index.js"],"names":["Title","props","children","size","borderBottom","className","TitleRoot","styled","div","css","IconCard","src","id","webId","version","BatchImg","name","multiple","changeName","onChangeName","reName","IconCardRoot","alt","style","marginTop","onChange","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","settings","slidesToShow","autoplay","arrows","useState","fileList","setFileList","customizeSize","setCustomizeSize","customizeName","setCustomizeName","runSwitch","setRunSwitch","imageSize","setImageSize","originalSize","setOriginalSize","zipName","setZipName","alert","setAlert","done","setDone","alertText","setAlertText","firstImageSize","setFirstImageSize","imgAmount","setImgAmount","setMultiple","setH1Title","useContext","MyContext","cardDom","useRef","uploadButton","PlusOutlined","a","fileObject","base64Img","image","Image","width","height","qrCodeSize","resizeBase64Img","copyResizeBase64Img","i","length","canvas","document","createElement","ctx","getContext","resizeImg","Math","ceil","drawImage","dataURL","toDataURL","copyName","isJpgOrPng","type","message","before","Upload","LIST_IGNORE","handleChangeCustomize","e","block","value","target","map","row","handleChangeName","newFileList","filter","key","useEffect","current","BatchImgRoot","AlertRoot","banner","SpinRoot","AlertSuccess","BatchImgHeader","gutter","span","UploadRoot","listType","showUploadList","beforeUpload","info","status","setTimeout","customRequest","onSuccess","RenderRow","index","RenderCard","InputRoot","CustomizeRoot","Group","placeholder","resize","TextArea","rows","newMultiple","split","Number","forEach","push","display","flexDirection","onClick","href","folderName","zip","JSZip","img","folder","j","replace","base64","generateAsync","then","content","saveAs","BatchImgBody","ref","Fragment","align","marginBottom","onKeyPress","CardCarousel","row2","index2","padding","main","section","Alert","Row","Carousel"],"mappings":"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","file":"BatchImg.6fdbb9b3763cabfe2b8a.js","sourcesContent":["import styled, { css } from 'styled-components';\r\n\r\nfunction Title(props) {\r\n    const { children, size, borderBottom, className } = props;\r\n\r\n    return (\r\n        <TitleRoot className={className} size={size} borderBottom={borderBottom}>\r\n            {children}\r\n        </TitleRoot>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n\r\nconst TitleRoot = styled.div`\r\n    font-size: ${(props) => props.size}px;\r\n    ${(props) =>\r\n        props.borderBottom &&\r\n        css`\r\n            padding-bottom: 10px;\r\n            border-bottom: 1px solid #fff;\r\n        `}\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { Input } from 'antd';\r\n\r\nfunction IconCard(props) {\r\n    const { size, src, id, webId, version, BatchImg, name, multiple, changeName, onChangeName } = props;\r\n    function reName() {\r\n        if (size[0] !== 128) {\r\n            if (version === 1) {\r\n                return `app_icon_${size[0]}x${size[1]}.png`;\r\n            } else if (version === 2) {\r\n                return `app_icon_effects_${size[0]}x${size[0]}.png`;\r\n            }\r\n        } else {\r\n            if (version === 1) {\r\n                return `app_icon_${webId}.png`;\r\n            } else if (version === 2) {\r\n                return `app_icon_effects_${webId}.png`;\r\n            }\r\n        }\r\n        if (size === 150) {\r\n            return `${webId}_qrcode.png`;\r\n        }\r\n        if (BatchImg) {\r\n            return `${name} ${multiple}`;\r\n        }\r\n    }\r\n    return (\r\n        <IconCardRoot>\r\n            <h3>\r\n                {size[0]} x {size[1]}\r\n            </h3>\r\n            <div className=\"img_img\">\r\n                <img src={src} id={'resizeImg' + (id + 1)} alt={name} />\r\n            </div>\r\n            {changeName ? (\r\n                <>\r\n                    <p\r\n                        className={`${!BatchImg ? 'card_name' : 'card_name card_name--batch'}`}\r\n                        id={'iconName' + (id + 1)}\r\n                    >\r\n                        {reName()}\r\n                    </p>{' '}\r\n                    <Input size=\"small\" style={{ marginTop: '11.2px' }} onChange={onChangeName} />\r\n                </>\r\n            ) : (\r\n                <p className={`${!BatchImg ? 'card_name' : 'card_name card_name--batch'}`} id={'iconName' + (id + 1)}>\r\n                    {reName()}\r\n                </p>\r\n            )}\r\n        </IconCardRoot>\r\n    );\r\n}\r\n\r\nexport default IconCard;\r\n\r\nconst IconCardRoot = styled.div`\r\n    text-align: center;\r\n    background-color: #fff;\r\n    border-radius: 4px;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    .img_img {\r\n        width: 192px;\r\n        height: 192px;\r\n        position: relative;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 20px;\r\n    }\r\n\r\n    img {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        max-width: 100%;\r\n        max-height: 100%;\r\n    }\r\n\r\n    p {\r\n        margin-top: 10px;\r\n        margin-bottom: 0;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .card_name {\r\n        max-width: 218px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        position: relative;\r\n        &--batch {\r\n            padding-right: 20px;\r\n            &:after {\r\n                position: absolute;\r\n                content: '倍';\r\n                right: 0;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","/**\r\n * getBase64\r\n * @param file\r\n * @returns {string}\r\n */\r\nexport function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = (error) => reject(error);\r\n    });\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react';\r\n\r\nimport { MyContext } from '@reducers';\r\n\r\nimport { getBase64 } from '@utils/image';\r\n\r\nimport { Form, Row, Col, Upload, message, Input, Button, Radio, Divider, Alert, Spin, Carousel, Icon } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport JSZip from 'jszip';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport Title from '@component/atoms/Title';\r\nimport IconCard from '@component/molecules/IconCard';\r\n\r\nconst settings = {\r\n    slidesToShow: 4,\r\n    autoplay: true,\r\n    arrows: true,\r\n};\r\n\r\nfunction BatchImg() {\r\n    const [fileList, setFileList] = useState([]);\r\n    const [customizeSize, setCustomizeSize] = useState(2);\r\n    const [customizeName, setCustomizeName] = useState(2);\r\n    const [runSwitch, setRunSwitch] = useState(false);\r\n    const [imageSize, setImageSize] = useState('');\r\n    const [originalSize, setOriginalSize] = useState('');\r\n    const [zipName, setZipName] = useState('');\r\n    const [alert, setAlert] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    const [alertText, setAlertText] = useState('');\r\n    const [firstImageSize, setFirstImageSize] = useState([]);\r\n    const [imgAmount, setImgAmount] = useState(0);\r\n\r\n    const [multiple, setMultiple] = useState([2, 3, 3, 4]);\r\n\r\n    const { setH1Title } = useContext(MyContext);\r\n\r\n    const cardDom = useRef();\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>上傳圖片</div>\r\n        </div>\r\n    );\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setImgAmount(0);\r\n            setFileList([]);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setH1Title('遊戲圖片批次產圖工具');\r\n\r\n        if (cardDom.current.children.length !== 0) {\r\n            setAlertText('');\r\n            setAlert(false);\r\n        }\r\n\r\n        if (fileList.length) {\r\n            setFirstImageSize(fileList[0].qrCodeSize);\r\n        }\r\n    }, [setH1Title, fileList, firstImageSize, multiple, runSwitch]);\r\n\r\n    async function beforeUpload(file) {\r\n        setRunSwitch(false);\r\n        setAlert(true);\r\n        setAlertText('上傳中');\r\n        const fileObject = {};\r\n        const base64Img = await getBase64(file);\r\n        const image = new Image();\r\n        let width = 0;\r\n        let height = 0;\r\n        image.onload = () => {\r\n            fileObject.qrCodeSize = [image.width, image.height];\r\n            fileObject.resizeBase64Img = [];\r\n            fileObject.copyResizeBase64Img = [];\r\n            for (let i = 0; i < multiple.length; i++) {\r\n                const canvas = document.createElement('canvas');\r\n                const ctx = canvas.getContext('2d');\r\n                const resizeImg = new Image();\r\n\r\n                if (customizeSize === 1) {\r\n                    width = Math.ceil(fileObject.qrCodeSize[0] * multiple[i]);\r\n                    height = Math.ceil(fileObject.qrCodeSize[1] * multiple[i]);\r\n                } else {\r\n                    width = Math.ceil((fileObject.qrCodeSize[0] / 4) * multiple[i]);\r\n                    height = Math.ceil((fileObject.qrCodeSize[1] / 4) * multiple[i]);\r\n                }\r\n\r\n                resizeImg.src = base64Img;\r\n                canvas.width = width;\r\n                canvas.height = height;\r\n\r\n                ctx.drawImage(resizeImg, 0, 0, width, height);\r\n                const dataURL = canvas.toDataURL('image/png');\r\n                fileObject.resizeBase64Img[i] = dataURL;\r\n                fileObject.copyResizeBase64Img[i] = dataURL;\r\n            }\r\n        };\r\n        image.src = base64Img;\r\n        fileObject.base64Img = base64Img;\r\n        fileObject.name = file.name;\r\n        fileObject.copyName = file.name;\r\n\r\n        const isJpgOrPng = file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('請上傳PNG檔!');\r\n        }\r\n        setFileList((before) => [...before, fileObject]);\r\n\r\n        return isJpgOrPng ? true : Upload.LIST_IGNORE;\r\n    }\r\n\r\n    function onChange(info) {\r\n        if (info.file.status === 'done') {\r\n            setImgAmount(imgAmount + 1);\r\n        }\r\n        if (imgAmount + 1 === info.fileList.length) {\r\n            setAlert(false);\r\n            setAlertText('圖片上傳完成');\r\n            setDone(true);\r\n            setTimeout(() => {\r\n                setDone(false);\r\n                setAlertText('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    function dummyRequest(info) {\r\n        setTimeout(() => {\r\n            info.onSuccess('ok');\r\n        }, 0);\r\n    }\r\n\r\n    function handleChangeCustomize(e, block) {\r\n        const value = e.target.value;\r\n        if (block === 'name') setCustomizeName(value);\r\n        if (block === 'size') setCustomizeSize(value);\r\n        if (value === 2 && block === 'name') {\r\n            fileList.map((row) => {\r\n                return (row.name = row.copyName);\r\n            });\r\n        }\r\n        if (value === 2 && block === 'size') {\r\n            setMultiple([2, 3, 3, 4]);\r\n            setImageSize('');\r\n            setOriginalSize('');\r\n            setFileList([]);\r\n        }\r\n        if (value === 1 && block === 'size') {\r\n            setFileList([]);\r\n            setImgAmount(0);\r\n        }\r\n    }\r\n\r\n    function handleChangeName(e, src) {\r\n        const newFileList = fileList.filter((row) => {\r\n            if (row.base64Img === src) {\r\n                row.name = `${e.target.value}.png`;\r\n            }\r\n            return row;\r\n        });\r\n        if (e.key === 'Enter') setFileList(newFileList);\r\n    }\r\n\r\n    function handleRenderImage() {\r\n        if (fileList.length === 0) return;\r\n        if (cardDom.current.children.length !== 0) return;\r\n\r\n        setDone(false);\r\n        setAlertText('圖片縮放執行中');\r\n        setAlert(true);\r\n        setTimeout(() => {\r\n            setRunSwitch(true);\r\n        }, 200);\r\n\r\n        if (fileList.length === 0 && customizeSize === 1 && imageSize === '') {\r\n            setAlertText('請先上傳圖標在設定尺寸');\r\n            setAlert(true);\r\n\r\n            setTimeout(() => {\r\n                setAlert(false);\r\n                setAlertText('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    function handleImageSize(e) {\r\n        setImageSize(e.target.value);\r\n        let newMultipleArray = [];\r\n        let newMultiple = [];\r\n        newMultipleArray = e.target.value.split(',').map(Number);\r\n        newMultipleArray.forEach((row) => {\r\n            newMultiple.push(row / originalSize);\r\n        });\r\n        setMultiple(newMultiple);\r\n    }\r\n\r\n    function handleOriginalSize(e) {\r\n        const value = e.target.value;\r\n        setOriginalSize(value);\r\n    }\r\n\r\n    function handleMultiple(e) {\r\n        if (e.key === 'Enter') {\r\n            // const oldMultiple = fileList[0].qrCodeSize;\r\n            let newMultipleArray = [];\r\n            let newMultiple = [];\r\n            newMultipleArray = imageSize.split(',').map(Number);\r\n            // let smallSize = oldMultiple[0] / 4;\r\n            newMultipleArray.forEach((row) => {\r\n                newMultiple.push(row / originalSize);\r\n            });\r\n            setMultiple(newMultiple);\r\n\r\n            // const newFileList = fileList.map((row) => {\r\n            //     row.resizeBase64Img = [];\r\n\r\n            //     for (let i = 0; i < newMultiple.length; i++) {\r\n            //         const canvas = document.createElement('canvas');\r\n            //         const ctx = canvas.getContext('2d');\r\n            //         const resizeImg = new Image();\r\n\r\n            //         const width = Math.ceil(smallSize * newMultiple[i]);\r\n            //         const height = Math.ceil(smallSize * newMultiple[i]);\r\n\r\n            //         resizeImg.src = row.base64Img;\r\n            //         canvas.width = width;\r\n            //         canvas.height = height;\r\n\r\n            //         ctx.drawImage(resizeImg, 0, 0, width, height);\r\n            //         const dataURL = canvas.toDataURL('image/png');\r\n            //         row.resizeBase64Img[i] = dataURL;\r\n            //         row.copyResizeBase64Img[i] = dataURL;\r\n            //     }\r\n            //     return row;\r\n            // });\r\n            // setFileList(newFileList);\r\n        }\r\n    }\r\n\r\n    function handleChangeZipName(e) {\r\n        setZipName(e.target.value);\r\n    }\r\n\r\n    function handleReset() {\r\n        setFileList([]);\r\n        setRunSwitch(false);\r\n        setZipName('');\r\n        setCustomizeSize(2);\r\n        setCustomizeName(2);\r\n        setMultiple([2, 3, 3, 4]);\r\n        setImageSize('');\r\n        setOriginalSize('');\r\n    }\r\n\r\n    function handleAlertClose() {\r\n        setAlert(false);\r\n    }\r\n\r\n    function handleSave() {\r\n        const folderName = zipName || '圖標';\r\n        const zip = new JSZip();\r\n        let src = '';\r\n        let name = '';\r\n        const img = zip.folder(folderName);\r\n        for (let i = 0; i < multiple.length; i++) {\r\n            for (let j = 0; j < fileList.length; j++) {\r\n                src = fileList[j].resizeBase64Img[i].replace('data:image/png;base64,', '');\r\n                name = fileList[j].name;\r\n                if (customizeSize === 1) {\r\n                    img.folder(\r\n                        `${fileList[j].qrCodeSize[0] * multiple[i]} x ${fileList[j].qrCodeSize[1] * multiple[i]}`\r\n                    ).file(name, src, { base64: true });\r\n                } else {\r\n                    switch (i) {\r\n                        case 0:\r\n                            const two = img.folder('2x');\r\n                            two.file(name, src, { base64: true });\r\n                            break;\r\n                        case 1:\r\n                            const three = img.folder('3x');\r\n                            three.file(name, src, { base64: true });\r\n                            break;\r\n                        case 2:\r\n                            const xxhdpi = img.folder('xxhdpi');\r\n                            xxhdpi.file(name, src, { base64: true });\r\n                            break;\r\n                        case 3:\r\n                            const xxxhdpi = img.folder('xxxhdpi');\r\n                            xxxhdpi.file(name, src, { base64: true });\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // for (let i = 0; i < fileList.length; i++) {\r\n        //     let folderName = fileList[i].name.replace('.png', '');\r\n        //     name = fileList[i].name;\r\n        //     var img = zip.folder(folderName);\r\n\r\n        //     for (let j = 0; j < fileList[i].resizeBase64Img.length; j++) {\r\n        //         src = fileList[i].resizeBase64Img[j].replace('data:image/png;base64,', '');\r\n        //         // console.log('src', src);\r\n        //         if (j === 0) {\r\n        //             var two = img.folder('2x');\r\n        //             two.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 1) {\r\n        //             var three = img.folder('3x');\r\n        //             three.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 2) {\r\n        //             var xxhdpi = img.folder('xxhdpi');\r\n        //             xxhdpi.file(name, src, { base64: true });\r\n        //         }\r\n        //         if (j === 3) {\r\n        //             var xxxhdpi = img.folder('xxxhdpi');\r\n        //             xxxhdpi.file(name, src, { base64: true });\r\n        //         }\r\n        //     }\r\n        // }\r\n        zip.generateAsync({ type: 'blob' }).then(function (content) {\r\n            saveAs(content, folderName);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <BatchImgRoot>\r\n            {alert && <AlertRoot type=\"error\" message={alertText} banner />}\r\n            {alert && (\r\n                <SpinRoot>\r\n                    <Spin size=\"large\" />\r\n                </SpinRoot>\r\n            )}\r\n            {done && <AlertSuccess type=\"success\" message={alertText} banner />}\r\n            <BatchImgHeader>\r\n                <Form>\r\n                    <Row gutter={32}>\r\n                        <Col span={10}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                上傳圖片\r\n                            </TitleRoot>\r\n                            {(customizeSize === 2 || (imageSize !== '' && originalSize !== '')) && (\r\n                                <UploadRoot\r\n                                    listType=\"picture-card\"\r\n                                    showUploadList={false}\r\n                                    multiple={true}\r\n                                    beforeUpload={beforeUpload}\r\n                                    onChange={onChange}\r\n                                    customRequest={dummyRequest}\r\n                                >\r\n                                    {uploadButton}\r\n                                </UploadRoot>\r\n                            )}\r\n\r\n                            <RenderRow gutter={8}>\r\n                                {fileList &&\r\n                                    fileList.map((row, index) => (\r\n                                        <RenderCard key={index}>\r\n                                            <img src={row.base64Img} alt={row.name} />\r\n                                        </RenderCard>\r\n                                    ))}\r\n                            </RenderRow>\r\n                        </Col>\r\n                        <Col span={10}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                圖片資訊\r\n                            </TitleRoot>\r\n                            <InputRoot>\r\n                                <p>自定義名稱</p>\r\n                                <CustomizeRoot>\r\n                                    <Radio.Group\r\n                                        value={customizeName}\r\n                                        onChange={(e) => handleChangeCustomize(e, 'name')}\r\n                                    >\r\n                                        <Radio value={1}>是</Radio>\r\n                                        <Radio value={2}>否</Radio>\r\n                                    </Radio.Group>\r\n                                    {/* {customizeName === 1 && (\r\n                                        <Input.TextArea\r\n                                            rows={4}\r\n                                            placeholder=\"多張圖片，請以 , 做區隔\"\r\n                                            style={{ resize: 'none', marginTop: '10px' }}\r\n                                        />\r\n                                    )} */}\r\n                                </CustomizeRoot>\r\n                            </InputRoot>\r\n                            <InputRoot>\r\n                                <p>自定義尺寸</p>\r\n                                <CustomizeRoot>\r\n                                    <Radio.Group\r\n                                        value={customizeSize}\r\n                                        onChange={(e) => handleChangeCustomize(e, 'size')}\r\n                                    >\r\n                                        <Radio value={1}>是</Radio>\r\n                                        <Radio value={2}>否</Radio>\r\n                                    </Radio.Group>\r\n                                    {customizeSize === 1 && (\r\n                                        <Input\r\n                                            placeholder=\"請輸入原始圖片寬度尺寸\"\r\n                                            style={{ resize: 'none', marginTop: '10px', width: '100%' }}\r\n                                            value={originalSize}\r\n                                            onChange={handleOriginalSize}\r\n                                        />\r\n                                    )}\r\n                                    {customizeSize === 1 && originalSize !== '' && (\r\n                                        <Input.TextArea\r\n                                            rows={3}\r\n                                            placeholder=\"多尺寸，輸入寬度即可，程式會自動計算高度，請以 , 做區隔，範例: 64,128,256,512\"\r\n                                            style={{ resize: 'none', marginTop: '10px' }}\r\n                                            value={imageSize}\r\n                                            onChange={handleImageSize}\r\n                                            // onKeyPress={handleMultiple}\r\n                                        />\r\n                                    )}\r\n                                </CustomizeRoot>\r\n                            </InputRoot>\r\n                            <InputRoot>\r\n                                <p>壓縮檔名稱</p>\r\n                                <Input\r\n                                    placeholder=\"請輸入壓縮檔名稱\"\r\n                                    size=\"small\"\r\n                                    value={zipName}\r\n                                    onChange={handleChangeZipName}\r\n                                />\r\n                            </InputRoot>\r\n                        </Col>\r\n                        <Col span={4} style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <TitleRoot size={20} borderBottom>\r\n                                功能\r\n                            </TitleRoot>\r\n                            <Button type=\"primary\" size=\"large\" block onClick={handleRenderImage}>\r\n                                執行圖片縮放\r\n                            </Button>\r\n                            <Button\r\n                                type=\"danger\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: '10px' }}\r\n                                onClick={handleReset}\r\n                            >\r\n                                重置\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: 'auto' }}\r\n                                href=\"https://tinypng.com/\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                TinyPng網站\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                size=\"large\"\r\n                                block\r\n                                style={{ marginTop: '10px' }}\r\n                                onClick={handleSave}\r\n                            >\r\n                                打包下載\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </BatchImgHeader>\r\n            <BatchImgBody>\r\n                <Row gutter={[16, 16]} ref={cardDom}>\r\n                    {runSwitch &&\r\n                        multiple.length >= 4 &&\r\n                        fileList.map((row, index) => {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <Col span={24}>\r\n                                        <Divider>{row.copyName}</Divider>\r\n                                    </Col>\r\n                                    {customizeName === 1 && (\r\n                                        <Col span={12}>\r\n                                            <Row align=\"middle\">\r\n                                                <Col span={4}>\r\n                                                    <p style={{ marginBottom: 0 }}>自定義名稱</p>\r\n                                                </Col>\r\n                                                <Col span={20}>\r\n                                                    <Input\r\n                                                        placeholder=\"輸入完成請按下'Enter'鍵\"\r\n                                                        onKeyPress={(e) => handleChangeName(e, row.base64Img)}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    )}\r\n                                    <Col span={24}>\r\n                                        <Row gutter={[16, 16]}>\r\n                                            <Col span={24}>\r\n                                                <CardCarousel {...settings}>\r\n                                                    {row.resizeBase64Img &&\r\n                                                        row.resizeBase64Img.map((row2, index2) => {\r\n                                                            return (\r\n                                                                <Col span={24} key={index2}>\r\n                                                                    <IconCard\r\n                                                                        id={index}\r\n                                                                        src={row2}\r\n                                                                        size={\r\n                                                                            customizeSize === 1\r\n                                                                                ? [\r\n                                                                                      Math.ceil(\r\n                                                                                          row.qrCodeSize[0] *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                      Math.ceil(\r\n                                                                                          row.qrCodeSize[1] *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                  ]\r\n                                                                                : [\r\n                                                                                      Math.ceil(\r\n                                                                                          (row.qrCodeSize[0] / 4) *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                      Math.ceil(\r\n                                                                                          (row.qrCodeSize[1] / 4) *\r\n                                                                                              multiple[index2]\r\n                                                                                      ),\r\n                                                                                  ]\r\n                                                                        }\r\n                                                                        BatchImg\r\n                                                                        name={row.name}\r\n                                                                        multiple={multiple[index2]}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            );\r\n                                                        })}\r\n                                                </CardCarousel>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </React.Fragment>\r\n                            );\r\n                        })}\r\n                    {runSwitch &&\r\n                        multiple.length < 4 &&\r\n                        fileList.map((row, index) => {\r\n                            return row.resizeBase64Img.map((row2, index2) => {\r\n                                return (\r\n                                    <React.Fragment key={row.name + index2}>\r\n                                        {index2 === 0 && (\r\n                                            <Col span={24}>\r\n                                                <Divider>{row.copyName}</Divider>\r\n                                            </Col>\r\n                                        )}\r\n                                        {index2 === 0 && customizeName === 1 ? (\r\n                                            <Col span={12}>\r\n                                                <Row align=\"middle\">\r\n                                                    <Col span={4}>\r\n                                                        <p style={{ marginBottom: 0 }}>自定義名稱</p>\r\n                                                    </Col>\r\n                                                    <Col span={20}>\r\n                                                        <Input\r\n                                                            placeholder=\"輸入完成請按下'Enter'鍵\"\r\n                                                            onKeyPress={(e) => handleChangeName(e, row.base64Img)}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        ) : null}\r\n                                        {index2 === 0 && <Col span={24} style={{ padding: 0 }}></Col>}\r\n                                        <Col span={6}>\r\n                                            <IconCard\r\n                                                id={index}\r\n                                                src={row2}\r\n                                                size={\r\n                                                    customizeSize === 1\r\n                                                        ? [\r\n                                                              Math.ceil(row.qrCodeSize[0] * multiple[index2]),\r\n                                                              Math.ceil(row.qrCodeSize[1] * multiple[index2]),\r\n                                                          ]\r\n                                                        : [\r\n                                                              Math.ceil((row.qrCodeSize[0] / 4) * multiple[index2]),\r\n                                                              Math.ceil((row.qrCodeSize[1] / 4) * multiple[index2]),\r\n                                                          ]\r\n                                                }\r\n                                                BatchImg\r\n                                                name={row.name}\r\n                                                multiple={multiple[index2]}\r\n                                            />\r\n                                        </Col>\r\n                                    </React.Fragment>\r\n                                );\r\n                            });\r\n                        })}\r\n                </Row>\r\n            </BatchImgBody>\r\n        </BatchImgRoot>\r\n    );\r\n}\r\n\r\nexport default BatchImg;\r\n\r\nconst BatchImgRoot = styled.main``;\r\n\r\nconst BatchImgHeader = styled.section`\r\n    padding: 30px 0;\r\n    background-color: #ccc;\r\n    form {\r\n        max-width: 1000px;\r\n        margin: 0 auto;\r\n        & > .ant-row {\r\n            min-height: 294px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst TitleRoot = styled(Title)`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst UploadRoot = styled(Upload)`\r\n    .ant-upload-list-item {\r\n        border-color: #d9d9d9;\r\n        background: #fff;\r\n    }\r\n    .ant-tooltip {\r\n        display: none;\r\n    }\r\n    .ant-upload-list {\r\n        max-height: 223px;\r\n        overflow: hidden;\r\n        overflow-y: auto;\r\n        &::-webkit-scrollbar {\r\n            width: 5px;\r\n            height: 5px;\r\n            background-color: #ccc;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n            box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\r\n            background-color: #ccc;\r\n            border-radius: 10px;\r\n        }\r\n        /*滚动条的滑块按钮*/\r\n        &::-webkit-scrollbar-thumb {\r\n            border-radius: 10px;\r\n            background-color: #001529;\r\n            box-shadow: inset 0 0 5px #000;\r\n        }\r\n    }\r\n`;\r\n\r\nconst InputRoot = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n    p {\r\n        min-width: 80px;\r\n        margin-right: 10px;\r\n        margin-bottom: 0;\r\n    }\r\n    input {\r\n        width: 170px;\r\n    }\r\n`;\r\n\r\nconst CustomizeRoot = styled.div``;\r\n\r\nconst BatchImgBody = styled.section`\r\n    max-width: 1000px;\r\n    margin: 0 auto;\r\n    padding: 30px 0;\r\n`;\r\n\r\nconst AlertRoot = styled(Alert)`\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    z-index: 51;\r\n`;\r\n\r\nconst AlertSuccess = styled(Alert)`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 51;\r\n    font-size: 22px;\r\n`;\r\n\r\nconst SpinRoot = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 50;\r\n`;\r\n\r\nconst RenderRow = styled(Row)`\r\n    max-height: 224px;\r\n    overflow-y: auto;\r\n    &::-webkit-scrollbar {\r\n        width: 5px;\r\n        background-color: #83adee;\r\n        border-radius: 5px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        width: 5px;\r\n        border-radius: 5px;\r\n        background-color: #243d65;\r\n    }\r\n`;\r\n\r\nconst RenderCard = styled.div`\r\n    width: 104px;\r\n    height: 104px;\r\n    background-color: #fafafa;\r\n    border: 1px dashed #d9d9d9;\r\n    margin: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    img {\r\n        max-width: 100%;\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nconst CardCarousel = styled(Carousel)`\r\n    margin: 0 -8px;\r\n    .slick-arrow {\r\n        background: #ccc;\r\n        &:before {\r\n            color: #fff;\r\n            font-size: 12px;\r\n        }\r\n        &:hover,\r\n        &:active {\r\n            background: #666;\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}